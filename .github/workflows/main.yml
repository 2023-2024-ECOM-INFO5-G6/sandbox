name: Application CI
on: [push, pull_request]
jobs:
  pipeline:
    name: blog pipeline
    runs-on: ubuntu-latest
    timeout-minutes: 40


    env:
      NODE_VERSION: 18.18.2
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
      JHI_DISABLE_WEBPACK_LOGS: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18.18.2
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Install node.js packages
        run: npm install
      - name: Run backend test
        run: |
          chmod +x mvnw
          npm run ci:backend:test
      - name: Run frontend test
        run: npm run ci:frontend:test- name: Package application
        run: npm run java:jar:prod
      - name: 'E2E: Package'
        run: npm run ci:e2e:package
      - name: 'E2E: Prepare'
        run: npm run ci:e2e:prepare
      - name: 'E2E: Run'
        run: npm run ci:e2e:run
      - name: Package application
        run: npm run java:jar:prod
      # - name: 'E2E: Package'
      #   run: npm run ci:e2e:package
      # - name: 'E2E: Prepare'
      #   run: npm run ci:e2e:prepare
      # - name: 'E2E: Run'
      #   run: npm run ci:e2e:run
      - name: Analyze code with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [ ! -z "$SONAR_TOKEN" ]; then
              ./mvnw -ntp initialize sonar:sonar -Dsonar.host.url=https://sonarcloud.io
          else
              echo No SONAR_TOKEN, skipping...
          fi
      # - name: Package application
      #   run: npm run java:jar:generator-jhipster
      - name: 'E2E: Package'
        run: npm run ci:e2e:package
      - name: 'E2E: Prepare'
        run: npm run ci:e2e:prepare
      - name: 'E2E: Run'
        run: npm run ci:e2e:run
        env:
          CYPRESS_ENABLE_RECORD: false
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      - name: 'E2E: Teardown'
        run: npm run ci:e2e:teardown

    docker:
      - name: Build and publish docker image
        runs-on: ubuntu-latest
        strategy:
          matrix:
            environment:
              - development
              - production
        environment:
          name: ${{ matrix.environment }}
        steps:
          - uses: actions/checkout@v4
          - uses: actions/setup-node@v3
            with:
              node-version: 18.18.2
          - uses: actions/setup-java@v3
            with:
              distribution: 'temurin'
              java-version: 17
          - name: Install node.js packages
            run: npm install
          - name: Build docker image
            run: |
              npm run java:docker:prod
              docker tag sandbox ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ secrets.DOCKER_IMAGE_TAG }}
            if: (matrix.environment == 'development' && github.ref == 'refs/heads/feature/addCICD') || (matrix.environment == 'production' && github.ref == 'refs/heads/main')
          - name: Publish docker image
            run: |
              echo ${{ secrets.REGISTRY_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
              docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ secrets.DOCKER_IMAGE_TAG }}
            if: (matrix.environment == 'development' && github.ref == 'refs/heads/feature/addCICD') || (matrix.environment == 'production' && github.ref == 'refs/heads/main')
